<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Frontends on Hun&#39;s Blog ✍️</title>
    <link>https://findmytrueself.github.io/en/frontend/</link>
    <description>Recent content in Frontends on Hun&#39;s Blog ✍️</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Im Hun</copyright>
    <lastBuildDate>Wed, 11 Sep 2024 13:53:35 +0900</lastBuildDate>
    <atom:link href="https://findmytrueself.github.io/en/frontend/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Closures in React</title>
      <link>https://findmytrueself.github.io/en/frontend/%EB%A6%AC%EC%95%A1%ED%8A%B8%EC%97%90%EC%84%9C%EC%9D%98-%ED%81%B4%EB%A1%9C%EC%A0%80/</link>
      <pubDate>Wed, 11 Sep 2024 13:53:35 +0900</pubDate>
      <guid>https://findmytrueself.github.io/en/frontend/%EB%A6%AC%EC%95%A1%ED%8A%B8%EC%97%90%EC%84%9C%EC%9D%98-%ED%81%B4%EB%A1%9C%EC%A0%80/</guid>
      <description>&lt;p&gt;Closures are a fundamental concept in JavaScript.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s a concept that is often asked about in technical interviews, and I remember memorizing it while preparing for my own technical interviews.&lt;/p&gt;&#xA;&lt;p&gt;However, I didn&amp;rsquo;t quite understand how closures are used in practice, and I often pondered how to apply them effectively. This time, I want to study the concept of closures in more depth.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Problem&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;When passing a function as a parameter to &lt;code&gt;customHook&lt;/code&gt;, let’s observe how the &lt;code&gt;state&lt;/code&gt; value inside the function is output when the &lt;code&gt;useCustom&lt;/code&gt; component is unmounted.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>useCallback</title>
      <link>https://findmytrueself.github.io/en/frontend/usecallback/</link>
      <pubDate>Tue, 02 Apr 2024 11:53:04 +0900</pubDate>
      <guid>https://findmytrueself.github.io/en/frontend/usecallback/</guid>
      <description>&lt;p&gt;Before addressing this question, I was studying the situation where functions enter the dependency array of &lt;code&gt;useEffect&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Typically, when creating a custom hook, the hook receives state values from the component&amp;rsquo;s props and uses them in the dependency array of &lt;code&gt;useEffect&lt;/code&gt; for handling operations&lt;/p&gt;&#xA;&lt;p&gt;So, what happens when a function is received as a prop? I contemplated this.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Why Functions Are Included in the Dependency Array&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Whenever a React component renders, functions are recreated.&lt;/p&gt;</description>
    </item>
    <item>
      <title>FlexBox</title>
      <link>https://findmytrueself.github.io/en/frontend/flexbox/</link>
      <pubDate>Tue, 27 Feb 2024 17:26:35 +0900</pubDate>
      <guid>https://findmytrueself.github.io/en/frontend/flexbox/</guid>
      <description>&lt;p&gt;&lt;strong&gt;flex-basis&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Similar to &lt;code&gt;width&lt;/code&gt;, it allows you to specify the initial size of the box.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;flex-grow&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;You can fill the available space in the overall box by giving it a value of 1. The default value is 0.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;flex-shrink&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;It allows you to dynamically reduce the size of the box. The default value is 1.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;flex-wrap&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;If the boxes exceed the screen width, they can be wrapped to the next line.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Overview of React Query</title>
      <link>https://findmytrueself.github.io/en/frontend/reactquery/</link>
      <pubDate>Thu, 12 Jan 2023 13:53:35 +0900</pubDate>
      <guid>https://findmytrueself.github.io/en/frontend/reactquery/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;React Query efficiently manages data through unique keys, preventing duplicate fetch calls and improving performance.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;For example, if you create a fetch function via a custom hook, it will be called each time it&amp;rsquo;s used, leading to unnecessary calls for the same data.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Query Keys&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;React Query manages cached queries using query keys, organizing complex objects and long strings as arrays.&lt;/p&gt;&#xA;&lt;p&gt;Since these keys are serializable, they serve as unique identifiers for the cached data.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding React Custom Hooks</title>
      <link>https://findmytrueself.github.io/en/frontend/reactcustomhooks/</link>
      <pubDate>Tue, 10 Jan 2023 18:22:35 +0900</pubDate>
      <guid>https://findmytrueself.github.io/en/frontend/reactcustomhooks/</guid>
      <description>&lt;p&gt;While using React, I mostly relied on the built-in hooks to handle most of my logic. However, I often pondered how to increase reusability for repetitive code.&lt;/p&gt;&#xA;&lt;p&gt;I believed that effectively using custom hooks would help me become a higher-level frontend developer.&lt;/p&gt;&#xA;&lt;p&gt;The most important principle of custom hooks is &amp;ldquo;reusability of logic, not values.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;By specifying only the values related to state changes as parameters within the hook, we can define the logic based on side effects.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Overview of Redux Thunk</title>
      <link>https://findmytrueself.github.io/en/frontend/reduxthunk/</link>
      <pubDate>Fri, 23 Dec 2022 13:53:35 +0900</pubDate>
      <guid>https://findmytrueself.github.io/en/frontend/reduxthunk/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;createAsyncThunk&lt;/code&gt; allows you to create actions for handling asynchronous operations.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;asyncUpFetch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createAsyncThunk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;counterSlice/asyncUpFetch&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;resp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fetch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;https://api.aergo.io/~~&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;resp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;createAsyncThunk Flow&lt;div class=&#34;not-prose&#34;&gt;&#xA;&lt;picture&gt;&#xA;    &lt;source type=&#34;image/webp&#34; srcset=&#34;https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk1_hu9320027548816404303.webp 320w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk1_hu16894372755192458662.webp 640w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk1_hu8074851478545350060.webp 960w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk1_hu2997400507292966289.webp 1280w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk1_hu11017166963062560165.webp 1600w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk1_hu2892849690969472788.webp 1920w&#34; sizes=&#34;(min-width: 1024px) 100vw, 50vw&#34; /&gt;&#xA;    &lt;source type=&#34;image/jpeg&#34; srcset=&#34;https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk1_hu7013145989649764176.jpg 320w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk1_hu11140428596311416143.jpg 640w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk1_hu3373501188064693645.jpg 960w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk1_hu1023863227182827733.jpg 1280w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk1_hu8780824925060435000.jpg 1600w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk1_hu6744986494203849771.jpg 1920w&#34; sizes=&#34;(min-width: 1024px) 100vw, 50vw&#34; /&gt;&#xA;    &lt;img class=&#34;h-auto max-w-full rounded-lg&#34; src=&#34;https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk1_hu11140428596311416143.jpg&#34; width=&#34;4234&#34; height=&#34;1920&#34; alt=&#34;createAsyncThunk&#34; title=&#34;createAsyncThunk&#34; loading=&#34;lazy&#34; /&gt;&#xA;  &lt;/picture&gt;&#xA;&lt;/div&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;While reducers automatically create action creators for you, this is not the case for asynchronous operations. You need to create the action creators manually within &lt;code&gt;extraReducers&lt;/code&gt;.&lt;div class=&#34;not-prose&#34;&gt;&#xA;&lt;picture&gt;&#xA;    &lt;source type=&#34;image/webp&#34; srcset=&#34;https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk2_hu2962176413034730927.webp 320w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk2_hu14557948238313353704.webp 640w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk2_hu12072362856280260774.webp 960w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk2_hu12798886999771432202.webp 1280w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk2_hu1431788354490986629.webp 1600w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk2_hu7003625082590439506.webp 1920w&#34; sizes=&#34;(min-width: 1024px) 100vw, 50vw&#34; /&gt;&#xA;    &lt;source type=&#34;image/jpeg&#34; srcset=&#34;https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk2_hu16454515909010058065.jpg 320w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk2_hu14495322509132719156.jpg 640w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk2_hu14468019247367571600.jpg 960w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk2_hu4625432120082960661.jpg 1280w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk2_hu11682124958531746078.jpg 1600w, https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk2_hu11979568647063563550.jpg 1920w&#34; sizes=&#34;(min-width: 1024px) 100vw, 50vw&#34; /&gt;&#xA;    &lt;img class=&#34;h-auto max-w-full rounded-lg&#34; src=&#34;https://findmytrueself.github.io/en/frontend/reduxthunk/images/reduxthunk2_hu14495322509132719156.jpg&#34; width=&#34;3150&#34; height=&#34;1966&#34; alt=&#34;actionCreator&#34; title=&#34;actionCreator&#34; loading=&#34;lazy&#34; /&gt;&#xA;  &lt;/picture&gt;&#xA;&lt;/div&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Image Masking in React</title>
      <link>https://findmytrueself.github.io/en/frontend/imgmask/</link>
      <pubDate>Mon, 30 May 2022 18:26:25 +0900</pubDate>
      <guid>https://findmytrueself.github.io/en/frontend/imgmask/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-tsx&#34; data-lang=&#34;tsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Button&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;variant&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;contained&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;Upload&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Icon&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;image/*&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;multiple&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;hidden&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;onChange&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;ChangeEvent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;HTMLInputElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handleUploadIcon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;First, we create an upload button that accepts all images and creates an input tag of type file.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-tsx&#34; data-lang=&#34;tsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handleUploadIcon&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;ChangeEvent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;HTMLInputElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;setImgFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;imagePromise&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arrayBuffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;makeImage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;figure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;borderColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;imagePromise&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;resized&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fileReader&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;FileReader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fileReader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;readAsDataURL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;resized&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fileReader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;onload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;image&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;src&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;onload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;base64Img&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;//   //! Convert icon to hash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CryptoJS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SHA256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;base64Img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dataURLtoFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;base64Img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;MaskedImage.png&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;dispatch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setInfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;base64Img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;base64Img&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;dispatch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setInfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Icon Added&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;setFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We use the &lt;code&gt;makeImage&lt;/code&gt; function to mask the image and the &lt;code&gt;dataURLtoFile&lt;/code&gt; function to create a file object.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Trying Out Redux Toolkit</title>
      <link>https://findmytrueself.github.io/en/frontend/reduxtoolkit/</link>
      <pubDate>Thu, 19 May 2022 16:53:04 +0900</pubDate>
      <guid>https://findmytrueself.github.io/en/frontend/reduxtoolkit/</guid>
      <description>&lt;p&gt;Throughout my projects, I&amp;rsquo;ve used Redux for state management.&lt;/p&gt;&#xA;&lt;p&gt;There are many state management libraries available. Recently, I’ve heard of libraries like MobX, Recoil, Zustand, and so on.&lt;/p&gt;&#xA;&lt;p&gt;&lt;div class=&#34;not-prose&#34;&gt;&#xA;&lt;picture&gt;&#xA;    &lt;source type=&#34;image/webp&#34; srcset=&#34;https://findmytrueself.github.io/en/frontend/reduxtoolkit/images/redux_hu14556515890578276960.webp 320w, https://findmytrueself.github.io/en/frontend/reduxtoolkit/images/redux_hu4420081359226959241.webp 640w, https://findmytrueself.github.io/en/frontend/reduxtoolkit/images/redux_hu9840106683936423402.webp 960w, https://findmytrueself.github.io/en/frontend/reduxtoolkit/images/redux_hu16350376616977113444.webp 1280w&#34; sizes=&#34;(min-width: 1024px) 100vw, 50vw&#34; /&gt;&#xA;    &lt;source type=&#34;image/jpeg&#34; srcset=&#34;https://findmytrueself.github.io/en/frontend/reduxtoolkit/images/redux_hu4052177352854407578.jpg 320w, https://findmytrueself.github.io/en/frontend/reduxtoolkit/images/redux_hu15443575979917164057.jpg 640w, https://findmytrueself.github.io/en/frontend/reduxtoolkit/images/redux_hu13529640205771354426.jpg 960w, https://findmytrueself.github.io/en/frontend/reduxtoolkit/images/redux_hu8183223698392523760.jpg 1280w&#34; sizes=&#34;(min-width: 1024px) 100vw, 50vw&#34; /&gt;&#xA;    &lt;img class=&#34;h-auto max-w-full rounded-lg&#34; src=&#34;https://findmytrueself.github.io/en/frontend/reduxtoolkit/images/redux_hu15443575979917164057.jpg&#34; width=&#34;1339&#34; height=&#34;537&#34; alt=&#34;NpmTrends&#34; title=&#34;NpmTrends&#34; loading=&#34;lazy&#34; /&gt;&#xA;  &lt;/picture&gt;&#xA;&lt;/div&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;While I haven&amp;rsquo;t applied other state management solutions directly in my projects, the statistics indicate that Redux is overwhelmingly popular.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Asynchronous Processing in JavaScript</title>
      <link>https://findmytrueself.github.io/en/frontend/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C%EC%9D%98-%EB%B9%84%EB%8F%99%EA%B8%B0%EC%B2%98%EB%A6%AC/</link>
      <pubDate>Thu, 05 May 2022 19:53:35 +0900</pubDate>
      <guid>https://findmytrueself.github.io/en/frontend/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C%EC%9D%98-%EB%B9%84%EB%8F%99%EA%B8%B0%EC%B2%98%EB%A6%AC/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Promise&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;The Promise object, introduced in JavaScript ES6, was first created to solve the &amp;ldquo;callback hell&amp;rdquo; problem, which arises when callback functions accumulate during asynchronous operations.&lt;/p&gt;&#xA;&lt;p&gt;While it works on the same principle, the Promise object provides better readability, which is why it is utilized. However, using many promise variables can lead to experiencing &amp;ldquo;promise hell&amp;rdquo; as well.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Response Time of Callback Functions, Promises, and Async/Await&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;The response time for both callback functions and promises is almost identical. They are read sequentially in the initial hoisting environment, causing the asynchronous part to be read before the previous processes are complete.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Basic Flow of How Web Services Operate</title>
      <link>https://findmytrueself.github.io/en/frontend/%EC%9B%B9%EC%84%9C%EB%B9%84%EC%8A%A4%EA%B0%80-%EB%8F%99%EC%9E%91%ED%95%98%EA%B2%8C-%ED%95%98%EB%8A%94-%EA%B8%B0%EB%B3%B8-%ED%94%8C%EB%A1%9C%EC%9A%B0/</link>
      <pubDate>Thu, 05 May 2022 19:30:13 +0900</pubDate>
      <guid>https://findmytrueself.github.io/en/frontend/%EC%9B%B9%EC%84%9C%EB%B9%84%EC%8A%A4%EA%B0%80-%EB%8F%99%EC%9E%91%ED%95%98%EA%B2%8C-%ED%95%98%EB%8A%94-%EA%B8%B0%EB%B3%B8-%ED%94%8C%EB%A1%9C%EC%9A%B0/</guid>
      <description>&lt;p&gt;Components of a Web Browser&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Call Stack: A stack that holds functions to be executed sequentially in JavaScript.&lt;/li&gt;&#xA;&lt;li&gt;Web API: APIs provided by the web browser for performing &lt;code&gt;asynchronous tasks&lt;/code&gt;, such as AJAX and setTimeout.&lt;/li&gt;&#xA;&lt;li&gt;Task Queue: Also known as the Callback Queue, it stores callback functions passed from the Web API.&lt;/li&gt;&#xA;&lt;li&gt;Event Loop: Checks if the Call Stack is empty; if it is, it moves tasks from the Task Queue to the Call Stack.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;setTimeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Async Hi hun&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello! World&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Hello! World&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Async Hi hun&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Even though asynchronous code is executed first, we can see it printed later.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
